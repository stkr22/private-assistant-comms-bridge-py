[build-system]
requires = ["uv_build>=0.8.11,<0.9.0"]
build-backend = "uv_build"

[project]
name = "app"
version = "2.1.1"
description = "Comms Bridge is an open-source endpoint designed to facilitate speech interaction within smart assistant systems, optimized for operation on edge devices."
authors = [{ name = "stkr22", email = "stkr22@github.com" }]
readme = "README.md"
license = "GPL-3.0"
license-files = [
    "LICENSE",
]

keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Home Automation",
]

requires-python = ">=3.11,<3.13"
dependencies = [
    "httpx~=0.27.0",
    "pyyaml~=6.0.1",
    "pydantic~=2.9.0",
    "private-assistant-commons~=3.0.0",
    "fastapi[standard]~=0.115.6",
    "speexdsp-ns~=0.1.2",
    "numpy==1.26.4",
    "aiomqtt~=2.3.0",
    "onnxruntime~=1.20.0",
    "pysilero-vad~=2.0.0",
    "openWakeWord",
]

[tool.uv.sources]
openWakeWord = { git = "https://github.com/stkr22/openWakeWord.git", rev = "e49345ad04d8cc64aac2e3bfb43a47e7c9c2d7e6" }

[project.urls]
Homepage = "https://github.com/stkr22/private-assistant-comms-bridge-py"
Repository = "https://github.com/stkr22/private-assistant-comms-bridge-py"
Documentation = "https://github.com/stkr22/private-assistant-comms-bridge-py/tree/main/docs"
Issues = "https://github.com/stkr22/private-assistant-comms-bridge-py/issues"
Changelog = "https://github.com/stkr22/private-assistant-comms-bridge-py/blob/main/CHANGELOG.md"

[dependency-groups]
dev = [
    "ruff~=0.12.3",
    "mypy~=1.17.0",
    "pytest~=8.4.1",
    "pytest-cov~=6.2.1",
    "types-pyyaml~=6.0.12.20240311",
    "websockets~=14.1",
    "pytest-xdist~=3.6.0",
    "coverage[toml]~=7.6.0",
    "commitizen~=4.8.3",
]

[[tool.mypy.overrides]]
module = ["openwakeword.*", "pyaudio.*"]
ignore_missing_imports = true

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff-specific rules
    "TCH", # flake8-type-checking
]
ignore = ["E203"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q -n auto"

[tool.coverage.run]
source = ["app"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "scm"
update_changelog_on_bump = true
